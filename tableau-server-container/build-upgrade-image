#!/bin/bash
# -----------------------------------------------------------------------------
#
# This file is the copyrighted property of Tableau Software and is protected
# by registered patents and other applicable U.S. and international laws and
# regulations.
#
# Unlicensed use of the contents of this file is prohibited. Please refer to
# the NOTICES.txt file for further details.
#
# -----------------------------------------------------------------------------

source "$(dirname "${BASH_SOURCE[0]}")"/build-utils

show_help() {
  cat <<EOM
  Usage: $(basename "$0") -i [INPUT_IMAGE_NAME] -n [OUTPUT_IMAGE_NAME] [optional arguments]

  Creates new Tableau Server Upgrade images, which helps in upgrading from one version of Tableau Server to another version.

  REQUIRED

    --installer=<value>       Path to the Tableau Server installer upgrading to.

    -i input name             Tag of Tableau Server image upgrading from.

  OPTIONAL

    -o output name            Tag of target generated Tableau Server image.

    -e environment file       Optional environment file to configuration overrides to docker image at build time.

    -v setup tool version     Provides the Setup tool version.
EOM
}

set_basic_variables() {
  set_shared_variables
  target_env_file="${context_dir}/docker/upgrade/upgrade-environment"
}

get_arguments() {
  OPTIND=1 # Reset for getopts (-: to allow long options)
  while getopts "i:o:e:vh-:" opt; do
    case "$opt" in
      i)
        input_name="${OPTARG}"
        ;;
      o)
        output_name="${OPTARG}"
        ;;
      e)
        src_env_file="${OPTARG}"
        if [ ! -f "${src_env_file}" ]; then
          echo "Environment file not found: ${src_env_file}"
          exit 1
        fi
        ;;
      v)
        echo "Setup tool version is ${TABLEAU_SERVER_CONTAINER_SETUP_TOOL_VERSION}"
        exit 0
        ;;
      h)
        show_help
        exit 0
        ;;
      -)
        local args
        IFS='=' read -r -a args <<< "${OPTARG}"
        case "${args[0]}" in
          installer)
            if [ ${#args[@]} -ne 2 ]; then
              echo "No value specified for ${args[0]}"
              exit 1
            fi
            installer="${args[1]}"
            ;;
          *)
            echoerr "Unknown or malformed command line option: '--${OPTARG}'"
            show_help
            exit 1
            ;;
        esac
        ;;
    esac
  done

  if [ $OPTIND -eq 1 ]; then
    show_help
    exit 2
  fi

  shift "$((OPTIND-1))"

  if [[ $# > 0 ]]; then
    echoerr "Invalid arguments: '$*'.  Canceling."
    show_help
    exit 2
  fi
}

resolve_arguments() {
  
  if [[ -z "${input_name}" ]]; then
    echoerr "ERROR: Tag of Tableau Server image upgrading from must be specified (-i)"
    echoerr "Exiting..."
    exit 1
  fi
  
  resolve_installer
  resolve_version

  if [[ -z "${output_name}" ]]; then
    output_name="tableau_server_upgrade_image:${version}"
  fi
}

copy_env_file_to_upgrade_dir() {
  if [ -f "${src_env_file}" ]; then
    cp "${src_env_file}" "${target_env_file}"
  fi  
}

build_image() {
  echo "Building image ${output_name} from ${image_name}"
  echo "Output Name: ${output_name}"
  echo "Installer: ${installer}"
  echo "Context: ${context_dir}"
  echo "Version: ${version}"
  docker_build_cmd=("docker build -t \"${output_name}\""
    -f "${context_dir}/upgrade.dockerfile"
    --build-arg "imageName=\"${input_name}\""
    --build-arg "installerFile=\"${installer_filename}\""
    --build-arg "serviceName=\"Tableau Server Upgrade\""
    --build-arg "upgradeVersionString=\"${version}\"")

  add_args_to_dockerfile
  docker_build_cmd+=("${context_dir}")

  /bin/bash -c "${docker_build_cmd[*]}"

  echo "Build finished"
}

main() {
  set_basic_variables
  get_arguments "$@"
  resolve_arguments
  check_docker_installed
  copy_env_file_to_upgrade_dir
  setup_metadata_file
  build_image
}

main "$@"

